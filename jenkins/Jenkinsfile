pipeline {
    agent {
        docker 
        {
            image 'python:3.9.1'
        }
    }
    stages {
        stage('Build') {
            
            steps {
                withEnv(["HOME=${env.WORKSPACE}"]) {
                    sh 'python -m pip install --no-cache-dir --user -r requirements.txt' 
                }
            }
        }
        stage('Test') {
            
            steps {
                withEnv(["HOME=${env.WORKSPACE}"]) {
                   
                    sh 'python -m pytest'          //lior change
                    // sh 'python -m py_compile website/test.py'
                    
                }
            }
            // post {
            //     withEnv(["HOME=${env.WORKSPACE}"]) {
            //         always {
            //             junit 'test-reports/results.xml'
            //         }
            //     }
            // }
            
           
        }
    }
}